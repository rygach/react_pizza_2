import React from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import qs from 'qs';

import '../scss/app.scss';

import {
  selectFilter,
  setCategoryId,
  setCurrentPage,
  setFilters,
} from '../redux/slices/filterSlice.ts';
import { fetchPizzas, selectPizzaData } from '../redux/slices/pizzaSlice.ts';
import Categories from '../Components/Categories.tsx';
import Sort from '../Components/Sort.tsx';
import PizzaBlock from '../Components/PizzaBlock/index.tsx';
import Skeleton from '../Components/PizzaBlock/Skeleton.tsx';
import Pagination from '../Components/Pagination/index.tsx';
import { popupList } from '../Components/Sort.tsx';

export const Home: React.FC = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  // –≤–æ—Ç —ç—Ç–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å–∫–æ–ª—å–∫–æ —è –ø–æ–Ω—è–ª –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  // –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∞. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ä–µ—Ñ, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ–≥–æ –º–æ–≥–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –≤ –ø—Ä–æ—à–ª—ã–π —Ä–µ–Ω–¥–µ—Ä
  // —Ç–æ –µ—Å—Ç—å —ç—Ç–æ –ø–æ —Å—É—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ Home, –Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ home- –∑–∞—à–∫–≤–∞—Ä, –∞ —ç—Ç–æ —Ç–∏–ø–æ React —Ö–æ—Ç—è –±—ã
  // —Ç–∞–∫ —á–∏—â–µ –∏ –ø–æ–Ω—è—Ç–Ω–µ–µ –∫–æ–¥
  const isSearch = React.useRef(false);
  const isMounted = React.useRef(false);

  const { items, status } = useSelector(selectPizzaData);
  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter);

  const onChangeCategory = (id) => {
    dispatch(setCategoryId(id));
  };

  const onChangePage = (number) => {
    dispatch(setCurrentPage(number));
  };

  const pizzas = items.map((obj) => (
    <Link key={obj.id} to={`/pizza/${obj.id}`}>
      <PizzaBlock image={obj.imageUrl} {...obj} />
    </Link>
  ));

  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);

  // –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ fetch —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞–µ—Ç—Å—è –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —ç–∫—à–µ–Ω–µ —Ä–µ–¥–∞–∫—Å-—Ç—É–ª–∫–∏—Ç–∞
  // –∑–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –∑–∞—Å–æ–≤—ã–≤–∞–µ–º –≤ —Å—Ç–æ—Ä –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏ —Å –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, –∞ –¥–∞–ª—å—à–µ –ø—Ä–∏–ª–æ–∂—É—Ö–∞ —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—è useEffect'—ã –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É
  const getPizzas = async () => {
    const sortBy = sort.sortProperty.replace('-', '');
    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';
    const category = categoryId > 0 ? `category=${categoryId}` : ``;
    const search = searchValue ? `&search=${searchValue}` : '';

    dispatch(
      fetchPizzas({
        sortBy,
        order,
        category,
        search,
        currentPage,
      }),
    );
  };

  // —ç—Ç–æ—Ç useEffect —Ç—É–ø–æ –≤—à–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ URL, –Ω–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –ø–æ-—É–º–Ω–æ–º—É
  // —Å–Ω–∞—á–∞–ª–∞ –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ —É –Ω–∞—Å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–Ω–¥–µ—Ä ? (–≤ —ç—Ç–æ–º –Ω–∞–º –ø–æ–º–æ–≥–∞–µ—Ç useRef - isMounted)
  // –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ, —Ç–æ –±—É–¥–µ—Ç —Ö—É–µ–≤–æ–π –∏–¥–µ–µ–π –≤—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ(–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è) –≤ URL –∫–∞–∫–∏–µ - –ª–∏–±–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  // –∞ –≤–æ—Ç –µ—Å–ª–∏ –º—ã —É–∂–µ –∑–∞—Ä–µ–Ω–¥–µ—Ä–∏–ª–∏—Å—å —Ö–æ—Ç—è –±—ã —Ä–∞–∑–æ–∫, —Ç–æ —Ç–∞–º —É–∂–µ —á–µ–∫–∞–µ–º —á–µ –ª–µ–∂–∏—Ç –≤ —Ä–µ–¥–∞–∫—Å–µ –∏ –æ—Ç —Ç—É–¥–∞ —Å—É–µ–º —ç—Ç–æ –≥–æ–≤–Ω–æ –≤ URL

  // –≤—Å—ë! –≤ —ç—Ç–æ–º useEffect –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç—Å—è. —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ –Ω–∏–º –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –¥—Ä—É–≥–æ–º useEffect
  React.useEffect(() => {
    if (isMounted.current) {
      const queryString = qs.stringify({
        sortProperty: sort.sortProperty,
        categoryId,
        currentPage,
      });

      navigate(`?${queryString}`);
    }

    isMounted.current = true;
  }, [categoryId, sort.sortProperty, currentPage]);

  // –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ —Ä–µ–¥–∞–∫—Å
  // —ç—Ç–æ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫—Ç–æ - —Ç–æ –≤–≤—ë–ª URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä—è–º–æ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏ —Ö–æ—á–µ—Ç —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∏—Ü—Ü—ã

  // –≤—Å—ë! –≤ –¥–∞–Ω–Ω–æ–º useEffect –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. –∑–∞–ø—Ä–æ—Å –≤ –±–¥ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º useEffect
  React.useEffect(() => {
    if (
      window.location.search &&
      // –∫–æ—Å—Ç—ã–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ —É–±—Ä–∞—Ç—å - –±—É–¥–µ—Ç –±–∞–≥ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∏—Ü—Ü–∞—Ö –≤—Å–µ—Ö
      window.location.search !== '?sortProperty=rating&categoryId=0&currentPage=1'
    ) {
      const params = qs.parse(window.location.search.substring(1));

      const sort = popupList.find((obj) => obj.sortProperty === params.sortProperty);

      dispatch(
        setFilters({
          ...params,
          sort,
        }),
      );

      // –≤–æ—Ç —ç—Ç–æ—Ç —Ä–µ—Ñ —Ç—É—Ç –Ω—É–∂–µ–Ω —Ç—É–ø–æ, —á—Ç–æ–±—ã –æ–±—Ö–∏—Ç—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É useEffect, —á—Ç–æ–±—ã —É –Ω–∞—Å –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –¥–≤–∞ –∑–∞–ø—Ä–æ—Å–∞.
      isSearch.current = true;
    }
  }, []);

  // –¥–∞–Ω–Ω—ã–π useEffect –º—ã –æ–±–µ—Ä–Ω—É–ª–∏ –≤ –ø—Ä–æ–≤–µ—Ä–∫—É useRef'a, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ –±—ã –º—ã –Ω–µ –º–µ–Ω—è–ª–∏ —ç—Ç–æ—Ç ref, —Ç–æ —É –Ω–∞—Å –±—ã —ç—Ç–æ—Ç —é—Å—ç—Ñ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª –±—ã –¥–≤–∞ —Ä–∞–∑–∞ - –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∞ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω —Å–ª–µ–¥–∏—Ç. —Ç–æ –µ—Å—Ç—å –ø–æ —Å–≤–æ–∏–º –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º –±—ã –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä –≤—ã–∑–≤–∞–ª –±—ã
  React.useEffect(() => {
    window.scrollTo(0, 0);

    if (!isSearch.current) {
      getPizzas();
    }

    isSearch.current = false;
  }, [categoryId, sort.sortProperty, searchValue, currentPage]);

  return (
    <>
      <div className="container">
        <div className="content__top">
          <Categories valueCategory={categoryId} onChangeCategory={onChangeCategory} />
          <Sort />
        </div>
        <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
        {status === 'error' ? (
          <div className="content__error-info">
            <h2>FFFFFFFFF KZZZZZZZ üòï</h2>
            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</p>
            <p>–°–æ–≤–µ—Ç—É–µ–º –Ω–∞–π—Ç–∏ –≤ —Å–µ–±–µ —Å–∏–ª—ã –¥–æ–ø–∏—Å–∞—Ç—å –±—ç–∫–µ–Ω–¥</p>
          </div>
        ) : (
          <div className="content__items">{status === 'loading' ? skeletons : pizzas}</div>
        )}

        <Pagination currentPage={currentPage} onChangePage={onChangePage} />
      </div>
    </>
  );
};
